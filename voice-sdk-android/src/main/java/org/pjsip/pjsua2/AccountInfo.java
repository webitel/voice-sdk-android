/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.pjsip.pjsua2;

/**
 * Account information. Application can query the account information<br>
 * by calling Account::getInfo().
 */
public class AccountInfo {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected AccountInfo(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(AccountInfo obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        pjsua2JNI.delete_AccountInfo(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  /**
   * The account ID.
   */
  public void setId(int value) {
    pjsua2JNI.AccountInfo_id_set(swigCPtr, this, value);
  }

  /**
   * The account ID.
   */
  public int getId() {
    return pjsua2JNI.AccountInfo_id_get(swigCPtr, this);
  }

  /**
   * Flag to indicate whether this is the default account.
   */
  public void setIsDefault(boolean value) {
    pjsua2JNI.AccountInfo_isDefault_set(swigCPtr, this, value);
  }

  /**
   * Flag to indicate whether this is the default account.
   */
  public boolean getIsDefault() {
    return pjsua2JNI.AccountInfo_isDefault_get(swigCPtr, this);
  }

  /**
   * Account URI
   */
  public void setUri(String value) {
    pjsua2JNI.AccountInfo_uri_set(swigCPtr, this, value);
  }

  /**
   * Account URI
   */
  public String getUri() {
    return pjsua2JNI.AccountInfo_uri_get(swigCPtr, this);
  }

  /**
   * Flag to tell whether this account has registration setting<br>
   * (reg_uri is not empty).
   */
  public void setRegIsConfigured(boolean value) {
    pjsua2JNI.AccountInfo_regIsConfigured_set(swigCPtr, this, value);
  }

  /**
   * Flag to tell whether this account has registration setting<br>
   * (reg_uri is not empty).
   */
  public boolean getRegIsConfigured() {
    return pjsua2JNI.AccountInfo_regIsConfigured_get(swigCPtr, this);
  }

  /**
   * Flag to tell whether this account is currently registered<br>
   * (has active registration session).
   */
  public void setRegIsActive(boolean value) {
    pjsua2JNI.AccountInfo_regIsActive_set(swigCPtr, this, value);
  }

  /**
   * Flag to tell whether this account is currently registered<br>
   * (has active registration session).
   */
  public boolean getRegIsActive() {
    return pjsua2JNI.AccountInfo_regIsActive_get(swigCPtr, this);
  }

  /**
   * An up to date expiration interval for account registration session.
   */
  public void setRegExpiresSec(long value) {
    pjsua2JNI.AccountInfo_regExpiresSec_set(swigCPtr, this, value);
  }

  /**
   * An up to date expiration interval for account registration session.
   */
  public long getRegExpiresSec() {
    return pjsua2JNI.AccountInfo_regExpiresSec_get(swigCPtr, this);
  }

  /**
   * Last registration status code. If status code is zero, the account<br>
   * is currently not registered. Any other value indicates the SIP<br>
   * status code of the registration.
   */
  public void setRegStatus(int value) {
    pjsua2JNI.AccountInfo_regStatus_set(swigCPtr, this, value);
  }

  /**
   * Last registration status code. If status code is zero, the account<br>
   * is currently not registered. Any other value indicates the SIP<br>
   * status code of the registration.
   */
  public int getRegStatus() {
    return pjsua2JNI.AccountInfo_regStatus_get(swigCPtr, this);
  }

  /**
   * String describing the registration status.
   */
  public void setRegStatusText(String value) {
    pjsua2JNI.AccountInfo_regStatusText_set(swigCPtr, this, value);
  }

  /**
   * String describing the registration status.
   */
  public String getRegStatusText() {
    return pjsua2JNI.AccountInfo_regStatusText_get(swigCPtr, this);
  }

  /**
   * Last registration error code. When the status field contains a SIP<br>
   * status code that indicates a registration failure, last registration<br>
   * error code contains the error code that causes the failure. In any<br>
   * other case, its value is zero.
   */
  public void setRegLastErr(int value) {
    pjsua2JNI.AccountInfo_regLastErr_set(swigCPtr, this, value);
  }

  /**
   * Last registration error code. When the status field contains a SIP<br>
   * status code that indicates a registration failure, last registration<br>
   * error code contains the error code that causes the failure. In any<br>
   * other case, its value is zero.
   */
  public int getRegLastErr() {
    return pjsua2JNI.AccountInfo_regLastErr_get(swigCPtr, this);
  }

  /**
   * Presence online status for this account.
   */
  public void setOnlineStatus(boolean value) {
    pjsua2JNI.AccountInfo_onlineStatus_set(swigCPtr, this, value);
  }

  /**
   * Presence online status for this account.
   */
  public boolean getOnlineStatus() {
    return pjsua2JNI.AccountInfo_onlineStatus_get(swigCPtr, this);
  }

  /**
   * Presence online status text.
   */
  public void setOnlineStatusText(String value) {
    pjsua2JNI.AccountInfo_onlineStatusText_set(swigCPtr, this, value);
  }

  /**
   * Presence online status text.
   */
  public String getOnlineStatusText() {
    return pjsua2JNI.AccountInfo_onlineStatusText_get(swigCPtr, this);
  }

  /**
   * Default constructor
   */
  public AccountInfo() {
    this(pjsua2JNI.new_AccountInfo(), true);
  }

}
