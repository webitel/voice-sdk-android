/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.pjsip.pjsua2;

/**
 * This structure contains additional info about AudioMediaPlayer.
 */
public class AudioMediaPlayerInfo {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected AudioMediaPlayerInfo(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(AudioMediaPlayerInfo obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        pjsua2JNI.delete_AudioMediaPlayerInfo(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  /**
   * Format ID of the payload.
   */
  public void setFormatId(int value) {
    pjsua2JNI.AudioMediaPlayerInfo_formatId_set(swigCPtr, this, value);
  }

  /**
   * Format ID of the payload.
   */
  public int getFormatId() {
    return pjsua2JNI.AudioMediaPlayerInfo_formatId_get(swigCPtr, this);
  }

  /**
   * The number of bits per sample of the file payload. For example,<br>
   * the value is 16 for PCM WAV and 8 for Alaw/Ulas WAV files.
   */
  public void setPayloadBitsPerSample(long value) {
    pjsua2JNI.AudioMediaPlayerInfo_payloadBitsPerSample_set(swigCPtr, this, value);
  }

  /**
   * The number of bits per sample of the file payload. For example,<br>
   * the value is 16 for PCM WAV and 8 for Alaw/Ulas WAV files.
   */
  public long getPayloadBitsPerSample() {
    return pjsua2JNI.AudioMediaPlayerInfo_payloadBitsPerSample_get(swigCPtr, this);
  }

  /**
   * The WAV payload size in bytes.
   */
  public void setSizeBytes(long value) {
    pjsua2JNI.AudioMediaPlayerInfo_sizeBytes_set(swigCPtr, this, value);
  }

  /**
   * The WAV payload size in bytes.
   */
  public long getSizeBytes() {
    return pjsua2JNI.AudioMediaPlayerInfo_sizeBytes_get(swigCPtr, this);
  }

  /**
   * The WAV payload size in samples.
   */
  public void setSizeSamples(long value) {
    pjsua2JNI.AudioMediaPlayerInfo_sizeSamples_set(swigCPtr, this, value);
  }

  /**
   * The WAV payload size in samples.
   */
  public long getSizeSamples() {
    return pjsua2JNI.AudioMediaPlayerInfo_sizeSamples_get(swigCPtr, this);
  }

  /**
   * Default constructor
   */
  public AudioMediaPlayerInfo() {
    this(pjsua2JNI.new_AudioMediaPlayerInfo(), true);
  }

}
