/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.pjsip.pjsua2;

/**
 * // PJSUA2_Call_Data_Structure<br>
 * <br>
 * This structure contains parameters for Call::answer(), Call::hangup(),<br>
 * Call::reinvite(), Call::update(), Call::xfer(), Call::xferReplaces(),<br>
 * Call::setHold().
 */
public class CallOpParam {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected CallOpParam(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(CallOpParam obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        pjsua2JNI.delete_CallOpParam(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  /**
   * The call setting.
   */
  public void setOpt(CallSetting value) {
    pjsua2JNI.CallOpParam_opt_set(swigCPtr, this, CallSetting.getCPtr(value), value);
  }

  /**
   * The call setting.
   */
  public CallSetting getOpt() {
    long cPtr = pjsua2JNI.CallOpParam_opt_get(swigCPtr, this);
    return (cPtr == 0) ? null : new CallSetting(cPtr, false);
  }

  /**
   * Status code.
   */
  public void setStatusCode(int value) {
    pjsua2JNI.CallOpParam_statusCode_set(swigCPtr, this, value);
  }

  /**
   * Status code.
   */
  public int getStatusCode() {
    return pjsua2JNI.CallOpParam_statusCode_get(swigCPtr, this);
  }

  /**
   * Reason phrase.
   */
  public void setReason(String value) {
    pjsua2JNI.CallOpParam_reason_set(swigCPtr, this, value);
  }

  /**
   * Reason phrase.
   */
  public String getReason() {
    return pjsua2JNI.CallOpParam_reason_get(swigCPtr, this);
  }

  /**
   * Options.
   */
  public void setOptions(long value) {
    pjsua2JNI.CallOpParam_options_set(swigCPtr, this, value);
  }

  /**
   * Options.
   */
  public long getOptions() {
    return pjsua2JNI.CallOpParam_options_get(swigCPtr, this);
  }

  /**
   * List of headers etc to be added to outgoing response message.<br>
   * Note that this message data will be persistent in all next<br>
   * answers/responses for this INVITE request.
   */
  public void setTxOption(SipTxOption value) {
    pjsua2JNI.CallOpParam_txOption_set(swigCPtr, this, SipTxOption.getCPtr(value), value);
  }

  /**
   * List of headers etc to be added to outgoing response message.<br>
   * Note that this message data will be persistent in all next<br>
   * answers/responses for this INVITE request.
   */
  public SipTxOption getTxOption() {
    long cPtr = pjsua2JNI.CallOpParam_txOption_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SipTxOption(cPtr, false);
  }

  /**
   * SDP answer. Currently only used for Call::answer().
   */
  public void setSdp(SdpSession value) {
    pjsua2JNI.CallOpParam_sdp_set(swigCPtr, this, SdpSession.getCPtr(value), value);
  }

  /**
   * SDP answer. Currently only used for Call::answer().
   */
  public SdpSession getSdp() {
    long cPtr = pjsua2JNI.CallOpParam_sdp_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SdpSession(cPtr, false);
  }

  /**
   * Default constructor initializes with zero/empty values.<br>
   * Setting useDefaultCallSetting to true will initialize opt with default<br>
   * call setting values.
   */
  public CallOpParam(boolean useDefaultCallSetting) {
    this(pjsua2JNI.new_CallOpParam__SWIG_0(useDefaultCallSetting), true);
  }

  /**
   * Default constructor initializes with zero/empty values.<br>
   * Setting useDefaultCallSetting to true will initialize opt with default<br>
   * call setting values.
   */
  public CallOpParam() {
    this(pjsua2JNI.new_CallOpParam__SWIG_1(), true);
  }

}
