/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.pjsip.pjsua2;

/**
 * This structure describes jitter buffer state.
 */
public class JbufState {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected JbufState(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(JbufState obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        pjsua2JNI.delete_JbufState(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  /**
   *  Individual frame size, in bytes.   
   */
  public void setFrameSize(long value) {
    pjsua2JNI.JbufState_frameSize_set(swigCPtr, this, value);
  }

  /**
   *  Individual frame size, in bytes.   
   */
  public long getFrameSize() {
    return pjsua2JNI.JbufState_frameSize_get(swigCPtr, this);
  }

  /**
   *  Minimum allowed prefetch, in frms. 
   */
  public void setMinPrefetch(long value) {
    pjsua2JNI.JbufState_minPrefetch_set(swigCPtr, this, value);
  }

  /**
   *  Minimum allowed prefetch, in frms. 
   */
  public long getMinPrefetch() {
    return pjsua2JNI.JbufState_minPrefetch_get(swigCPtr, this);
  }

  /**
   *  Maximum allowed prefetch, in frms. 
   */
  public void setMaxPrefetch(long value) {
    pjsua2JNI.JbufState_maxPrefetch_set(swigCPtr, this, value);
  }

  /**
   *  Maximum allowed prefetch, in frms. 
   */
  public long getMaxPrefetch() {
    return pjsua2JNI.JbufState_maxPrefetch_get(swigCPtr, this);
  }

  /**
   *  Current burst level, in frames     
   */
  public void setBurst(long value) {
    pjsua2JNI.JbufState_burst_set(swigCPtr, this, value);
  }

  /**
   *  Current burst level, in frames     
   */
  public long getBurst() {
    return pjsua2JNI.JbufState_burst_get(swigCPtr, this);
  }

  /**
   *  Current prefetch value, in frames  
   */
  public void setPrefetch(long value) {
    pjsua2JNI.JbufState_prefetch_set(swigCPtr, this, value);
  }

  /**
   *  Current prefetch value, in frames  
   */
  public long getPrefetch() {
    return pjsua2JNI.JbufState_prefetch_get(swigCPtr, this);
  }

  /**
   *  Current buffer size, in frames.    
   */
  public void setSize(long value) {
    pjsua2JNI.JbufState_size_set(swigCPtr, this, value);
  }

  /**
   *  Current buffer size, in frames.    
   */
  public long getSize() {
    return pjsua2JNI.JbufState_size_get(swigCPtr, this);
  }

  /**
   *  Average delay, in ms.              
   */
  public void setAvgDelayMsec(long value) {
    pjsua2JNI.JbufState_avgDelayMsec_set(swigCPtr, this, value);
  }

  /**
   *  Average delay, in ms.              
   */
  public long getAvgDelayMsec() {
    return pjsua2JNI.JbufState_avgDelayMsec_get(swigCPtr, this);
  }

  /**
   *  Minimum delay, in ms.              
   */
  public void setMinDelayMsec(long value) {
    pjsua2JNI.JbufState_minDelayMsec_set(swigCPtr, this, value);
  }

  /**
   *  Minimum delay, in ms.              
   */
  public long getMinDelayMsec() {
    return pjsua2JNI.JbufState_minDelayMsec_get(swigCPtr, this);
  }

  /**
   *  Maximum delay, in ms.              
   */
  public void setMaxDelayMsec(long value) {
    pjsua2JNI.JbufState_maxDelayMsec_set(swigCPtr, this, value);
  }

  /**
   *  Maximum delay, in ms.              
   */
  public long getMaxDelayMsec() {
    return pjsua2JNI.JbufState_maxDelayMsec_get(swigCPtr, this);
  }

  /**
   *  Standard deviation of delay, in ms.
   */
  public void setDevDelayMsec(long value) {
    pjsua2JNI.JbufState_devDelayMsec_set(swigCPtr, this, value);
  }

  /**
   *  Standard deviation of delay, in ms.
   */
  public long getDevDelayMsec() {
    return pjsua2JNI.JbufState_devDelayMsec_get(swigCPtr, this);
  }

  /**
   *  Average burst, in frames.          
   */
  public void setAvgBurst(long value) {
    pjsua2JNI.JbufState_avgBurst_set(swigCPtr, this, value);
  }

  /**
   *  Average burst, in frames.          
   */
  public long getAvgBurst() {
    return pjsua2JNI.JbufState_avgBurst_get(swigCPtr, this);
  }

  /**
   *  Number of lost frames.             
   */
  public void setLost(long value) {
    pjsua2JNI.JbufState_lost_set(swigCPtr, this, value);
  }

  /**
   *  Number of lost frames.             
   */
  public long getLost() {
    return pjsua2JNI.JbufState_lost_get(swigCPtr, this);
  }

  /**
   *  Number of discarded frames.        
   */
  public void setDiscard(long value) {
    pjsua2JNI.JbufState_discard_set(swigCPtr, this, value);
  }

  /**
   *  Number of discarded frames.        
   */
  public long getDiscard() {
    return pjsua2JNI.JbufState_discard_get(swigCPtr, this);
  }

  /**
   *  Number of empty on GET events.     
   */
  public void setEmpty(long value) {
    pjsua2JNI.JbufState_empty_set(swigCPtr, this, value);
  }

  /**
   *  Number of empty on GET events.     
   */
  public long getEmpty() {
    return pjsua2JNI.JbufState_empty_get(swigCPtr, this);
  }

  public JbufState() {
    this(pjsua2JNI.new_JbufState(), true);
  }

}
