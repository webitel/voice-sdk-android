/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.pjsip.pjsua2;

/**
 * Parameter of Endpoint::onIpChangeProgress().
 */
public class OnIpChangeProgressParam {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected OnIpChangeProgressParam(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(OnIpChangeProgressParam obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        pjsua2JNI.delete_OnIpChangeProgressParam(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  /**
   * The IP change progress operation.
   */
  public void setOp(int value) {
    pjsua2JNI.OnIpChangeProgressParam_op_set(swigCPtr, this, value);
  }

  /**
   * The IP change progress operation.
   */
  public int getOp() {
    return pjsua2JNI.OnIpChangeProgressParam_op_get(swigCPtr, this);
  }

  /**
   * The operation progress status.
   */
  public void setStatus(int value) {
    pjsua2JNI.OnIpChangeProgressParam_status_set(swigCPtr, this, value);
  }

  /**
   * The operation progress status.
   */
  public int getStatus() {
    return pjsua2JNI.OnIpChangeProgressParam_status_get(swigCPtr, this);
  }

  /**
   * Information of the transport id. This is only available when the <br>
   * operation is PJSUA_IP_CHANGE_OP_RESTART_LIS.
   */
  public void setTransportId(int value) {
    pjsua2JNI.OnIpChangeProgressParam_transportId_set(swigCPtr, this, value);
  }

  /**
   * Information of the transport id. This is only available when the <br>
   * operation is PJSUA_IP_CHANGE_OP_RESTART_LIS.
   */
  public int getTransportId() {
    return pjsua2JNI.OnIpChangeProgressParam_transportId_get(swigCPtr, this);
  }

  /**
   * Information of the account id. This is only available when the <br>
   * operation is:<br>
   * - PJSUA_IP_CHANGE_OP_ACC_SHUTDOWN_TP <br>
   * - PJSUA_IP_CHANGE_OP_ACC_UPDATE_CONTACT <br>
   * - PJSUA_IP_CHANGE_OP_ACC_HANGUP_CALLS<br>
   * - PJSUA_IP_CHANGE_OP_ACC_REINVITE_CALLS
   */
  public void setAccId(int value) {
    pjsua2JNI.OnIpChangeProgressParam_accId_set(swigCPtr, this, value);
  }

  /**
   * Information of the account id. This is only available when the <br>
   * operation is:<br>
   * - PJSUA_IP_CHANGE_OP_ACC_SHUTDOWN_TP <br>
   * - PJSUA_IP_CHANGE_OP_ACC_UPDATE_CONTACT <br>
   * - PJSUA_IP_CHANGE_OP_ACC_HANGUP_CALLS<br>
   * - PJSUA_IP_CHANGE_OP_ACC_REINVITE_CALLS
   */
  public int getAccId() {
    return pjsua2JNI.OnIpChangeProgressParam_accId_get(swigCPtr, this);
  }

  /**
   * Information of the call id. This is only available when the operation is<br>
   * PJSUA_IP_CHANGE_OP_ACC_HANGUP_CALLS or <br>
   * PJSUA_IP_CHANGE_OP_ACC_REINVITE_CALLS
   */
  public void setCallId(int value) {
    pjsua2JNI.OnIpChangeProgressParam_callId_set(swigCPtr, this, value);
  }

  /**
   * Information of the call id. This is only available when the operation is<br>
   * PJSUA_IP_CHANGE_OP_ACC_HANGUP_CALLS or <br>
   * PJSUA_IP_CHANGE_OP_ACC_REINVITE_CALLS
   */
  public int getCallId() {
    return pjsua2JNI.OnIpChangeProgressParam_callId_get(swigCPtr, this);
  }

  /**
   * Registration information. This is only available when the operation is<br>
   * PJSUA_IP_CHANGE_OP_ACC_UPDATE_CONTACT
   */
  public void setRegInfo(RegProgressParam value) {
    pjsua2JNI.OnIpChangeProgressParam_regInfo_set(swigCPtr, this, RegProgressParam.getCPtr(value), value);
  }

  /**
   * Registration information. This is only available when the operation is<br>
   * PJSUA_IP_CHANGE_OP_ACC_UPDATE_CONTACT
   */
  public RegProgressParam getRegInfo() {
    long cPtr = pjsua2JNI.OnIpChangeProgressParam_regInfo_get(swigCPtr, this);
    return (cPtr == 0) ? null : new RegProgressParam(cPtr, false);
  }

  public OnIpChangeProgressParam() {
    this(pjsua2JNI.new_OnIpChangeProgressParam(), true);
  }

}
