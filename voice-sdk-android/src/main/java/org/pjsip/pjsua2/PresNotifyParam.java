/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.pjsip.pjsua2;

/**
 * Parameters for presNotify() account method.
 */
public class PresNotifyParam {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected PresNotifyParam(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(PresNotifyParam obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        pjsua2JNI.delete_PresNotifyParam(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  /**
   * Server presence subscription instance.
   */
  public void setSrvPres(SWIGTYPE_p_void value) {
    pjsua2JNI.PresNotifyParam_srvPres_set(swigCPtr, this, SWIGTYPE_p_void.getCPtr(value));
  }

  /**
   * Server presence subscription instance.
   */
  public SWIGTYPE_p_void getSrvPres() {
    long cPtr = pjsua2JNI.PresNotifyParam_srvPres_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  /**
   * Server presence subscription state to set.
   */
  public void setState(int value) {
    pjsua2JNI.PresNotifyParam_state_set(swigCPtr, this, value);
  }

  /**
   * Server presence subscription state to set.
   */
  public int getState() {
    return pjsua2JNI.PresNotifyParam_state_get(swigCPtr, this);
  }

  /**
   * Optionally specify the state string name, if state is not "active",<br>
   * "pending", or "terminated".
   */
  public void setStateStr(String value) {
    pjsua2JNI.PresNotifyParam_stateStr_set(swigCPtr, this, value);
  }

  /**
   * Optionally specify the state string name, if state is not "active",<br>
   * "pending", or "terminated".
   */
  public String getStateStr() {
    return pjsua2JNI.PresNotifyParam_stateStr_get(swigCPtr, this);
  }

  /**
   * If the new state is PJSIP_EVSUB_STATE_TERMINATED, optionally specify<br>
   * the termination reason.
   */
  public void setReason(String value) {
    pjsua2JNI.PresNotifyParam_reason_set(swigCPtr, this, value);
  }

  /**
   * If the new state is PJSIP_EVSUB_STATE_TERMINATED, optionally specify<br>
   * the termination reason.
   */
  public String getReason() {
    return pjsua2JNI.PresNotifyParam_reason_get(swigCPtr, this);
  }

  /**
   * If the new state is PJSIP_EVSUB_STATE_TERMINATED, this specifies<br>
   * whether the NOTIFY request should contain message body containing<br>
   * account's presence information.
   */
  public void setWithBody(boolean value) {
    pjsua2JNI.PresNotifyParam_withBody_set(swigCPtr, this, value);
  }

  /**
   * If the new state is PJSIP_EVSUB_STATE_TERMINATED, this specifies<br>
   * whether the NOTIFY request should contain message body containing<br>
   * account's presence information.
   */
  public boolean getWithBody() {
    return pjsua2JNI.PresNotifyParam_withBody_get(swigCPtr, this);
  }

  /**
   * Optional list of headers to be sent with the NOTIFY request.
   */
  public void setTxOption(SipTxOption value) {
    pjsua2JNI.PresNotifyParam_txOption_set(swigCPtr, this, SipTxOption.getCPtr(value), value);
  }

  /**
   * Optional list of headers to be sent with the NOTIFY request.
   */
  public SipTxOption getTxOption() {
    long cPtr = pjsua2JNI.PresNotifyParam_txOption_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SipTxOption(cPtr, false);
  }

  public PresNotifyParam() {
    this(pjsua2JNI.new_PresNotifyParam(), true);
  }

}
