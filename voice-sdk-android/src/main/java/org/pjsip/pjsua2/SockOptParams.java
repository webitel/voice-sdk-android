/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.pjsip.pjsua2;

/**
 * Socket option parameters, to be specified in TransportConfig.
 */
public class SockOptParams extends PersistentObject {
  private transient long swigCPtr;

  protected SockOptParams(long cPtr, boolean cMemoryOwn) {
    super(pjsua2JNI.SockOptParams_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SockOptParams obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        pjsua2JNI.delete_SockOptParams(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  /**
   * Array of socket options.
   */
  public void setSockOpts(SockOptVector value) {
    pjsua2JNI.SockOptParams_sockOpts_set(swigCPtr, this, SockOptVector.getCPtr(value), value);
  }

  /**
   * Array of socket options.
   */
  public SockOptVector getSockOpts() {
    long cPtr = pjsua2JNI.SockOptParams_sockOpts_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SockOptVector(cPtr, false);
  }

  /**
   *  Default constructor initialises with default values 
   */
  public SockOptParams() {
    this(pjsua2JNI.new_SockOptParams(), true);
  }

  /**
   * Read this object from a container node.<br>
   * <br>
   * @param node              Container to read values from.
   */
  public void readObject(ContainerNode node) throws java.lang.Exception {
    pjsua2JNI.SockOptParams_readObject(swigCPtr, this, ContainerNode.getCPtr(node), node);
  }

  /**
   * Write this object to a container node.<br>
   * <br>
   * @param node              Container to write values to.
   */
  public void writeObject(ContainerNode node) throws java.lang.Exception {
    pjsua2JNI.SockOptParams_writeObject(swigCPtr, this, ContainerNode.getCPtr(node), node);
  }

}
