/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.pjsip.pjsua2;

/**
 * Media stream info.
 */
public class StreamInfo {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected StreamInfo(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(StreamInfo obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        pjsua2JNI.delete_StreamInfo(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  /**
   * Media type of this stream.
   */
  public void setType(int value) {
    pjsua2JNI.StreamInfo_type_set(swigCPtr, this, value);
  }

  /**
   * Media type of this stream.
   */
  public int getType() {
    return pjsua2JNI.StreamInfo_type_get(swigCPtr, this);
  }

  /**
   * Transport protocol (RTP/AVP, etc.)
   */
  public void setProto(int value) {
    pjsua2JNI.StreamInfo_proto_set(swigCPtr, this, value);
  }

  /**
   * Transport protocol (RTP/AVP, etc.)
   */
  public int getProto() {
    return pjsua2JNI.StreamInfo_proto_get(swigCPtr, this);
  }

  /**
   * Media direction.
   */
  public void setDir(int value) {
    pjsua2JNI.StreamInfo_dir_set(swigCPtr, this, value);
  }

  /**
   * Media direction.
   */
  public int getDir() {
    return pjsua2JNI.StreamInfo_dir_get(swigCPtr, this);
  }

  /**
   * Remote RTP address
   */
  public void setRemoteRtpAddress(String value) {
    pjsua2JNI.StreamInfo_remoteRtpAddress_set(swigCPtr, this, value);
  }

  /**
   * Remote RTP address
   */
  public String getRemoteRtpAddress() {
    return pjsua2JNI.StreamInfo_remoteRtpAddress_get(swigCPtr, this);
  }

  /**
   * Optional remote RTCP address
   */
  public void setRemoteRtcpAddress(String value) {
    pjsua2JNI.StreamInfo_remoteRtcpAddress_set(swigCPtr, this, value);
  }

  /**
   * Optional remote RTCP address
   */
  public String getRemoteRtcpAddress() {
    return pjsua2JNI.StreamInfo_remoteRtcpAddress_get(swigCPtr, this);
  }

  /**
   * Outgoing codec payload type.
   */
  public void setTxPt(long value) {
    pjsua2JNI.StreamInfo_txPt_set(swigCPtr, this, value);
  }

  /**
   * Outgoing codec payload type.
   */
  public long getTxPt() {
    return pjsua2JNI.StreamInfo_txPt_get(swigCPtr, this);
  }

  /**
   * Incoming codec payload type.
   */
  public void setRxPt(long value) {
    pjsua2JNI.StreamInfo_rxPt_set(swigCPtr, this, value);
  }

  /**
   * Incoming codec payload type.
   */
  public long getRxPt() {
    return pjsua2JNI.StreamInfo_rxPt_get(swigCPtr, this);
  }

  /**
   * Outgoing pt for audio telephone-events.
   */
  public void setAudTxEventPt(int value) {
    pjsua2JNI.StreamInfo_audTxEventPt_set(swigCPtr, this, value);
  }

  /**
   * Outgoing pt for audio telephone-events.
   */
  public int getAudTxEventPt() {
    return pjsua2JNI.StreamInfo_audTxEventPt_get(swigCPtr, this);
  }

  /**
   * Incoming pt for audio telephone-events.
   */
  public void setAudRxEventPt(int value) {
    pjsua2JNI.StreamInfo_audRxEventPt_set(swigCPtr, this, value);
  }

  /**
   * Incoming pt for audio telephone-events.
   */
  public int getAudRxEventPt() {
    return pjsua2JNI.StreamInfo_audRxEventPt_get(swigCPtr, this);
  }

  /**
   * Codec name.
   */
  public void setCodecName(String value) {
    pjsua2JNI.StreamInfo_codecName_set(swigCPtr, this, value);
  }

  /**
   * Codec name.
   */
  public String getCodecName() {
    return pjsua2JNI.StreamInfo_codecName_get(swigCPtr, this);
  }

  /**
   * Codec clock rate.
   */
  public void setCodecClockRate(long value) {
    pjsua2JNI.StreamInfo_codecClockRate_set(swigCPtr, this, value);
  }

  /**
   * Codec clock rate.
   */
  public long getCodecClockRate() {
    return pjsua2JNI.StreamInfo_codecClockRate_get(swigCPtr, this);
  }

  /**
   * Optional audio codec param.
   */
  public void setAudCodecParam(CodecParam value) {
    pjsua2JNI.StreamInfo_audCodecParam_set(swigCPtr, this, CodecParam.getCPtr(value), value);
  }

  /**
   * Optional audio codec param.
   */
  public CodecParam getAudCodecParam() {
    long cPtr = pjsua2JNI.StreamInfo_audCodecParam_get(swigCPtr, this);
    return (cPtr == 0) ? null : new CodecParam(cPtr, false);
  }

  /**
   * Optional video codec param.
   */
  public void setVidCodecParam(VidCodecParam value) {
    pjsua2JNI.StreamInfo_vidCodecParam_set(swigCPtr, this, VidCodecParam.getCPtr(value), value);
  }

  /**
   * Optional video codec param.
   */
  public VidCodecParam getVidCodecParam() {
    long cPtr = pjsua2JNI.StreamInfo_vidCodecParam_get(swigCPtr, this);
    return (cPtr == 0) ? null : new VidCodecParam(cPtr, false);
  }

  /**
   * Jitter buffer init delay in msec.
   */
  public void setJbInit(int value) {
    pjsua2JNI.StreamInfo_jbInit_set(swigCPtr, this, value);
  }

  /**
   * Jitter buffer init delay in msec.
   */
  public int getJbInit() {
    return pjsua2JNI.StreamInfo_jbInit_get(swigCPtr, this);
  }

  /**
   * Jitter buffer minimum prefetch delay in msec.
   */
  public void setJbMinPre(int value) {
    pjsua2JNI.StreamInfo_jbMinPre_set(swigCPtr, this, value);
  }

  /**
   * Jitter buffer minimum prefetch delay in msec.
   */
  public int getJbMinPre() {
    return pjsua2JNI.StreamInfo_jbMinPre_get(swigCPtr, this);
  }

  /**
   * Jitter buffer maximum prefetch delay in msec.
   */
  public void setJbMaxPre(int value) {
    pjsua2JNI.StreamInfo_jbMaxPre_set(swigCPtr, this, value);
  }

  /**
   * Jitter buffer maximum prefetch delay in msec.
   */
  public int getJbMaxPre() {
    return pjsua2JNI.StreamInfo_jbMaxPre_get(swigCPtr, this);
  }

  /**
   * Jitter buffer max delay in msec.
   */
  public void setJbMax(int value) {
    pjsua2JNI.StreamInfo_jbMax_set(swigCPtr, this, value);
  }

  /**
   * Jitter buffer max delay in msec.
   */
  public int getJbMax() {
    return pjsua2JNI.StreamInfo_jbMax_get(swigCPtr, this);
  }

  /**
   * Jitter buffer discard algorithm.
   */
  public void setJbDiscardAlgo(SWIGTYPE_p_pjmedia_jb_discard_algo value) {
    pjsua2JNI.StreamInfo_jbDiscardAlgo_set(swigCPtr, this, SWIGTYPE_p_pjmedia_jb_discard_algo.getCPtr(value));
  }

  /**
   * Jitter buffer discard algorithm.
   */
  public SWIGTYPE_p_pjmedia_jb_discard_algo getJbDiscardAlgo() {
    return new SWIGTYPE_p_pjmedia_jb_discard_algo(pjsua2JNI.StreamInfo_jbDiscardAlgo_get(swigCPtr, this), true);
  }

  /**
   * Disable automatic sending of RTCP SDES and BYE.
   */
  public void setRtcpSdesByeDisabled(boolean value) {
    pjsua2JNI.StreamInfo_rtcpSdesByeDisabled_set(swigCPtr, this, value);
  }

  /**
   * Disable automatic sending of RTCP SDES and BYE.
   */
  public boolean getRtcpSdesByeDisabled() {
    return pjsua2JNI.StreamInfo_rtcpSdesByeDisabled_get(swigCPtr, this);
  }

  /**
   * Default constructor
   */
  public StreamInfo() {
    this(pjsua2JNI.new_StreamInfo(), true);
  }

}
